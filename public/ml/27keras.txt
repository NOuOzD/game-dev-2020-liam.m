<script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.5.2"> </script> 

 

Test or change this data <br>
<textarea id="myAsk2" rows="50" cols="100" wrap="false"> 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,7,7,7,7,2,2,2,2,2,2,2,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7
,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,7,7,7,7,7,7,7,7,2,2,2,2,2,2,7
,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7
,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7
,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7
,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,7,7,7,7,7,7,7,7,2,2,2,2,2,2,7
,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7,7,7,7,7,7,7,2,2,2,2,2,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,7,7,7,7,2,2,2,2,2,2,2,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,2,2,2,2,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,2,2,2,2,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,2,2,2,2,2,7,7,7,7,7,7,7,7
,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
</textarea><br>
<input id="myButton7979" type="button" value="Train images and test" onclick="{ 
                                                                                    
document.getElementById('myButton7979').style.backgroundColor = 'green' 
                                                                              
const xs = tf.tensor4d([                                                                                                                                                
                                                                                                                                                                        
 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0
,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0
,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0
,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0
,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0
,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0
,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0
,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0
,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0
,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0
,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0
,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0
,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0                                                                                                                                                              

   
   
   
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0                                                                                                                                                                

   
   
   
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0
,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0
,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0
,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0
,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0
,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0
,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0
,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0
,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0
,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0
,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0
,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0
,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0    

   
   
   
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,9,9,8,8,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,0,0,0,0,8,9,8,8,0,0,0,0,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,0,0,0,0,9,0,9,9,0,9,0,9,9,0,9,0,0,0,9,9,9,9,9,9,9
,9,9,9,9,9,9,0,0,9,0,0,0,0,9,9,9,0,9,9,9,0,9,9,0,0,0,0,9,9,9,9,9
,9,9,9,9,9,0,0,0,9,0,9,0,0,9,9,0,0,9,9,9,0,0,9,9,9,0,0,9,9,9,9,9
,9,9,9,9,9,0,0,9,9,0,8,0,0,9,0,0,0,0,0,0,9,8,9,9,0,0,0,9,9,9,9,9
,9,9,9,9,9,0,0,1,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,9,9,9,9,9
,9,9,9,9,9,0,0,9,9,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9
,9,9,9,9,9,0,0,9,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,9,9,1,9,9
,9,9,9,9,8,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,9
,9,9,9,9,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,9,9,9,9,1,9
,9,9,9,0,9,1,9,9,0,0,9,9,9,9,0,0,9,9,9,9,9,9,0,9,9,1,1,1,0,9,1,9
,9,0,9,0,1,1,9,9,9,0,0,9,9,9,9,0,0,9,9,1,9,9,0,9,1,1,1,1,1,9,9,9
,9,9,8,9,1,1,1,1,9,9,0,9,9,9,9,9,9,9,9,9,9,9,0,9,1,1,1,1,9,9,1,9
,9,9,0,9,9,9,1,1,9,9,0,9,9,9,9,9,9,9,9,9,9,0,9,9,1,1,9,9,9,9,1,9
,9,9,0,9,9,9,9,9,1,9,0,0,9,9,1,9,9,9,9,9,9,0,9,9,9,9,9,9,9,0,1,9
,9,9,9,9,9,9,9,9,9,9,8,0,1,9,1,9,9,1,1,9,9,0,9,9,9,9,9,9,9,8,1,9
,9,9,9,0,0,9,9,9,9,9,9,0,9,1,9,9,9,1,1,1,0,9,9,9,9,9,9,8,9,1,1,9
,9,9,9,9,0,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,8,9,9,1,1,9
,9,9,9,9,8,9,8,0,0,0,0,0,0,9,1,9,1,1,1,1,0,0,1,0,8,0,8,9,9,1,9,9
,9,9,9,9,9,1,9,0,0,9,0,0,9,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,9,9
,9,9,9,9,9,1,1,0,9,0,0,9,1,1,1,1,1,1,1,1,1,9,0,0,0,9,1,1,1,9,9,9
,9,9,9,9,9,9,1,1,1,1,0,9,9,9,9,9,9,9,9,9,9,9,1,9,9,1,9,1,1,9,9,9
,9,9,9,9,9,9,9,1,1,1,0,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,1,1,9,9,9,9
,9,9,9,9,9,9,9,1,1,1,1,0,0,8,9,9,9,9,8,8,0,8,1,1,9,1,1,9,9,9,9,9
,9,9,9,9,9,9,9,9,1,9,1,1,0,9,9,9,9,9,9,9,9,1,1,1,1,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,1,1,9,0,0,0,0,0,0,9,9,9,1,1,1,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,1,1,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9  
 
   
   
   
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,9,8,9,9,9,9,9,9,9,9,9,9,9,9,1
,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,0,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8
,9,9,9,9,9,9,9,9,9,9,9,9,9,1,1,1,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,0,0,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,9,1,1,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,8,0,0,9,1,9,9,9,9,1,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,9,0,0,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,0,0,0,0,8,0,0,0,0,0,0,9,9,9,9,9,1,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,0,0,0,0,8,8,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,8,0,0,9,0,0,0,0,0,8,8,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,8,9,0,0,0,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,8,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
 
   
   
   
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0,0
,0,0,0,0,8,0,0,0,0,0,0,0,9,9,0,1,0,0,0,0,0,0,0,0,9,9,9,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,0,9,0,0,0,0,0,0,9,9,9,0,0,0,9,9,0,0,0,0,0
,0,0,0,0,0,0,9,0,0,9,0,0,9,9,9,0,9,1,9,9,0,0,0,0,0,0,1,9,9,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,0,0,9,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,9,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,8,0,0
,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0
,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,9,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,1,0,8,9,0,0,0,0,0,0,0,0,0,0,0
,0,0,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0
,0,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,9,0,0,9,8,8,0,0,0,0,0,0,9,9,0,0
,0,0,0,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,0,9,9,0,0,0,0
,0,0,0,0,9,9,0,0,0,0,0,1,0,0,0,0,9,9,9,9,9,9,9,9,9,0,0,0,9,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,9,9,9,9,9,9,9,9,0,0,0,9,9,0,0,0
,0,0,0,0,0,0,0,0,0,8,0,0,8,0,0,0,0,9,9,9,9,9,9,1,0,0,8,9,0,0,0,0
,0,0,0,0,0,0,0,9,9,0,9,9,9,0,0,9,0,0,9,9,9,1,0,0,9,9,9,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,9,0,0,0,0,0,8,0,0,0,0,8,1,9,9,0,0,0,0,0
,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,0,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,8,8,0,0,0,0,8,0,8,8,8,8,8,9,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,9,9,9,8,9,9,8,8,8,8,9,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  
 
   
   
   
,0,0,9,0,1,0,0,0,0,9,1,9,9,0,9,9,9,8,9,9,8,9,0,9,9,9,1,1,0,0,0,9
,1,9,0,0,0,8,0,9,9,0,8,1,9,9,9,9,9,9,9,9,9,8,0,0,9,9,8,8,9,9,9,0
,9,9,0,9,0,0,9,9,9,1,1,9,1,9,0,0,9,9,9,9,9,1,0,9,9,9,0,0,0,9,0,0
,8,9,0,0,9,0,0,9,0,1,8,0,1,9,9,1,9,9,9,9,0,9,9,9,9,9,9,8,9,0,9,9
,0,9,8,8,8,0,9,0,9,0,9,9,0,9,0,0,8,9,8,0,9,0,0,0,9,9,0,1,0,9,9,9
,0,0,9,0,8,1,0,0,9,9,0,9,1,9,0,0,1,9,0,0,1,1,0,9,9,9,0,9,1,9,0,9
,9,9,1,1,9,8,9,9,1,1,9,0,0,0,9,1,9,9,9,1,9,1,9,9,9,9,0,9,1,1,0,0
,1,9,1,8,0,0,9,9,9,8,0,9,0,0,9,9,9,9,9,0,0,1,9,1,9,0,0,1,9,0,0,0
,9,9,9,0,0,0,9,0,9,9,9,9,0,0,8,0,0,1,0,9,1,9,0,9,9,0,1,8,9,0,9,0
,9,9,1,9,0,0,0,9,9,9,9,9,0,0,9,9,9,0,9,9,0,9,0,0,9,0,1,0,1,0,9,9
,0,9,0,9,9,1,9,1,0,0,0,0,9,0,9,9,0,1,9,0,9,9,1,0,9,0,1,9,1,9,9,9
,9,9,0,1,9,9,9,9,9,0,9,9,1,9,9,1,9,1,9,0,1,9,9,9,9,0,9,1,0,9,9,9
,8,0,9,1,0,1,9,1,9,0,9,9,1,0,0,0,9,1,0,9,9,0,9,0,0,9,0,9,9,9,9,0
,0,0,0,1,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,1,0,9,9,9,0,9,0,0,0,0
,0,9,1,0,8,9,9,9,9,9,9,8,0,9,9,1,9,0,9,0,1,9,9,9,9,9,9,9,0,9,9,9
,9,9,9,1,8,9,9,9,9,9,0,0,9,8,1,0,0,0,9,9,0,9,9,0,9,9,9,9,9,0,0,1
,9,9,9,9,9,8,0,0,9,9,9,8,9,0,1,0,0,9,9,9,1,1,9,9,9,9,1,9,9,1,9,0
,1,9,9,9,1,1,1,9,0,9,9,9,8,9,9,9,0,0,0,0,9,9,1,9,9,9,9,0,1,9,0,9
,0,0,0,9,9,1,9,1,0,0,9,1,0,0,8,9,9,9,0,0,1,9,9,8,9,9,1,0,1,9,0,9
,0,0,9,9,9,0,0,9,8,9,9,0,0,9,1,9,9,0,1,9,9,9,9,0,8,9,9,0,0,1,1,0
,0,0,0,1,9,0,0,0,9,0,0,0,8,9,9,8,0,0,9,8,0,0,9,0,9,0,0,9,9,0,0,0
,1,1,9,9,9,9,9,9,9,9,0,9,9,0,9,9,9,0,0,9,0,0,8,0,1,0,0,8,0,0,0,0
,1,9,0,9,9,9,0,1,9,9,9,9,0,9,9,9,9,1,8,0,9,8,9,9,9,0,0,9,9,9,0,0
,0,9,0,9,9,0,0,0,9,1,9,9,0,0,9,9,0,9,9,9,0,1,9,0,8,9,1,1,0,1,0,0
,9,0,0,9,9,0,9,9,9,9,9,0,9,0,8,8,9,0,8,0,9,0,0,9,9,8,9,9,9,0,9,9
,9,1,9,9,9,9,0,0,9,9,9,0,0,9,0,0,9,9,9,0,9,0,0,9,9,9,9,9,9,1,9,9
,9,9,0,0,1,9,9,9,9,9,9,9,9,0,0,8,9,9,9,9,9,9,8,9,9,0,0,9,9,1,9,1
,9,9,1,9,9,9,9,9,9,1,0,9,9,8,9,9,9,9,9,1,1,9,9,1,9,9,9,1,9,9,9,8
,0,9,9,0,9,9,9,9,9,9,1,9,0,0,9,9,9,1,9,9,9,1,9,9,0,9,0,1,9,9,9,1
,9,9,0,9,9,8,9,9,9,9,9,9,9,0,9,0,9,9,9,0,9,9,9,9,8,1,0,9,9,9,9,9
,0,9,9,9,0,9,1,0,0,1,9,1,8,0,1,9,9,1,9,1,9,0,9,8,9,9,0,9,0,9,8,9
,0,9,9,9,9,9,9,0,0,9,0,0,8,9,9,9,9,9,8,9,9,9,9,9,9,9,9,0,8,9,0,9 

   
   
,1,1,1,1,1,9,9,1,1,1,9,1,1,9,9,9,9,1,9,1,9,1,1,1,9,9,9,1,9,9,1,1
,1,1,1,1,1,9,1,9,1,1,9,1,9,1,9,9,1,9,9,1,1,1,1,9,9,1,9,1,1,1,9,1
,1,9,1,1,1,9,1,1,1,9,1,1,9,9,1,1,1,9,9,9,9,9,9,9,9,1,1,1,1,9,1,9
,9,1,9,1,1,1,9,9,9,9,9,1,9,1,9,1,9,9,1,9,9,9,1,9,9,9,9,9,9,9,1,1
,9,9,9,9,1,9,9,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,1,1
,9,9,1,1,9,9,9,9,1,9,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9
,9,9,1,9,9,9,9,9,9,9,9,1,9,1,1,9,1,1,9,9,9,9,1,9,1,9,9,9,9,9,1,1
,9,9,1,1,0,8,9,8,1,9,1,9,1,9,1,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,8
,9,9,1,1,9,1,9,9,0,9,9,1,8,9,9,9,1,8,9,9,1,9,9,1,9,9,9,1,9,1,9,9
,9,9,9,1,0,9,9,9,9,9,9,1,9,9,1,8,9,9,9,9,1,1,9,9,1,9,8,9,9,1,9,9
,1,1,1,9,9,1,9,9,9,1,1,9,9,9,9,9,1,1,1,1,9,9,1,1,9,9,1,9,9,1,1,9
,9,1,1,9,1,9,1,9,1,1,9,9,9,9,1,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,1
,9,1,9,1,9,9,9,1,9,1,1,1,1,9,9,9,9,9,9,9,1,1,1,9,1,9,1,9,9,9,1,9
,1,9,1,9,9,1,9,9,1,9,1,9,1,1,1,1,1,9,1,9,9,9,1,1,9,9,1,9,9,1,9,1
,9,1,1,1,9,1,1,9,1,1,9,9,1,1,1,1,9,9,9,9,1,9,9,1,1,9,9,9,9,1,1,1
,1,1,1,9,1,9,1,1,1,9,1,1,1,9,9,9,1,9,1,9,1,1,1,9,9,9,1,1,1,1,9,9
,1,1,1,1,9,9,1,1,1,1,1,9,1,1,9,1,1,1,9,1,9,1,9,1,1,1,1,1,1,9,9,1
,1,1,1,9,1,1,9,9,1,1,9,1,1,9,9,1,9,9,9,9,1,1,1,9,1,9,9,9,1,9,1,1
,9,1,1,9,9,1,1,1,9,1,1,9,9,9,1,9,1,1,9,1,1,9,1,1,9,9,9,1,9,1,1,1
,9,9,1,9,1,9,1,9,1,9,9,9,1,9,9,1,9,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9
,9,9,1,8,9,1,1,1,1,9,9,1,1,9,1,1,8,9,9,9,1,1,9,1,9,9,9,1,8,9,9,1
,8,1,1,1,9,9,9,9,1,9,1,8,1,9,1,9,1,1,9,9,9,9,1,8,9,1,1,9,1,1,9,9
,9,9,9,1,9,0,9,9,9,1,9,9,1,1,1,0,1,9,9,1,9,9,9,9,9,9,9,1,9,1,1,0
,9,0,1,8,1,9,1,1,1,9,9,9,9,1,0,9,9,1,1,1,8,9,9,9,1,8,9,9,9,1,9,1
,1,9,9,1,1,9,1,9,9,9,9,9,9,0,8,9,9,1,9,9,9,9,9,9,8,9,9,9,1,9,1,9
,0,9,9,1,9,9,9,9,8,1,9,9,9,1,8,1,9,1,9,1,9,9,9,9,9,9,9,9,9,9,9,9
,9,9,8,1,1,9,9,9,9,1,9,1,1,9,1,1,1,8,1,9,1,9,9,1,9,9,0,9,9,9,1,1
,1,1,9,9,1,1,9,8,9,1,1,1,9,9,9,1,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9
,9,9,9,9,1,1,9,9,9,9,1,1,1,9,1,1,1,1,1,9,9,9,1,9,9,9,9,9,9,9,1,1
,9,9,9,1,9,1,9,9,9,1,9,9,1,9,9,1,9,9,9,9,1,9,1,9,9,1,1,1,1,1,9,9
,1,9,1,1,1,1,1,1,1,9,1,9,1,1,9,1,9,9,1,9,9,1,9,1,9,9,1,9,9,9,9,9
,1,9,1,9,1,1,9,1,9,9,1,1,9,1,9,9,1,9,9,1,9,1,1,1,1,1,1,1,9,1,1,1

                                                                                    
], shape=[8, 32, 32, 1], 'int32');    // 8 input images that are 32 x 32 with  10 colors 0-9)                                                                                                                                                     
                                                                                                                                                                        
// Labels of how many lines in each image. I can make much more images just few here for simplicity                                                                     
const ys = tf.tensor2d([0,1,0,0,    0,1,0,0,    0,1,0,0,    0,1,0,0,    0,1,0,0,    0,1,0,0,    1,0,0,0,   1,0,0,0 ], shape=[8, 4], 'int32');        // 8 images 4 dimension                                                                                                                  
                                                                                                                                                                        
                                                                                                                                                                        
model = tf.sequential();                                                                                                                                          
                                                                                                                                                                        
model.add(tf.layers.conv2d({                                                                                                                                            
    inputShape: [32, 32, 1],                                                                                                                                                  
    kernelSize: 2,                                                                                                                                                          
    filters: 4,                                                                                                                                                             
    strides: 8,                                                                                                                                                             
    activation: 'relu',                                                                                                                                                     
    kernelInitializer: 'varianceScaling'                                                                                                                                    
}));                                                                                                                                                                    
                                                                                                                                                                        
model.add(tf.layers.conv2d({ kernelSize: 2, filters: 4, strides: 8, activation: 'relu', kernelInitializer: 'varianceScaling' }));                                       
                                                                                                                                                                        
model.add(tf.layers.flatten());                                                                                                                                         
model.add(tf.layers.dense({ units: 30, kernelInitializer: 'varianceScaling', activation: 'softmax' }));                                                                 
model.add(tf.layers.dense({ units: 4, activation: 'linear' }) ); 
                                          
model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});   
                                                                              
//document.getElementById('myButton7979').style.backgroundColor = 'blue'   
                                                                              
(async function() { // inline async so we can use promises and await                                                                                                   
                                                                                                                                                                        
                                                                                                                   
    var myFit = await model.fit(xs, ys, { 
      batchSize: 8192, 
      epochs : 800, 
      callbacks :  {  
                                                                              
          onBatchEnd: async (batch, logs) => {                                                               
              await tf.nextFrame();  // This improves UI responsiveness during training.  
          },       
                                                                              
         onEpochEnd: async (epoch, logs) => {                                            
              document.getElementById('myDiv7979').innerHTML = 'Loss after Epoch ' + epoch + '/800 : ' + logs.loss +' <br><br>'                                                               
         }   
                                                                              
      }  // end all callbacks                                                                        
    });  // end model.fit                                                                                                              
    
  await document.getElementById('myButtonTest').click() 
  document.getElementById('myButton7979').style.backgroundColor = 'yellow'                                                                               
})()
                                                                                                                                                                      

                                                                                                                                                                       
}"> 
 
<input type="button" id="myButtonTest" value="Re-Test" onclick="{  
  (async function () {                                                                                                                                                                                                                                                                                                                                                                                                                                      
    const myPredictArray = await model.predict(tf.tensor4d(document.getElementById('myAsk2').value.split(','), [1, 32, 32, 1], 'int32')).data()                                                                                                                                      
   // document.getElementById('myDiv7979').innerHTML = 'Input '+document.getElementById('myAsk2').value+'<br><br> Output = <br>'                                                                                                                                    
    document.getElementById('myDiv7979').innerHTML  = 'Output = <br>'
    document.getElementById('myDiv7979').innerHTML += '<b>No Shape ' + await Math.round(myPredictArray[0]*100) +'%</b><br>'          
    document.getElementById('myDiv7979').innerHTML += '<b>Circle ' + await Math.round(myPredictArray[1]*100) +'%</b><br>'        
    document.getElementById('myDiv7979').innerHTML += '<b>Triangle ' + await Math.round(myPredictArray[2]*100) +'%</b><br>'        
    document.getElementById('myDiv7979').innerHTML += '<b>Rectangle ' + await Math.round(myPredictArray[3]*100) +'%</b><br>'    
              
                                                             
 })()   // end the inline async function
}">  
<div id='myDiv7979'>...</div><br>